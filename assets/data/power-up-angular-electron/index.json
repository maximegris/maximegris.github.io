{"hash":"45a0bf1de86c2611d0cdbcc6231b5d410f1b1833","data":{"post":{"title":"Libérez la puissance d’Angular avec Electron","date":"20 novembre 2019","timeToRead":4,"content":"<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 922 343' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-e24408b3fccdbdb6e9e6bd81e63b3d21'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-e24408b3fccdbdb6e9e6bd81e63b3d21)' width='922' height='343' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAIAAADF1mwTAAAACXBIWXMAAAsSAAALEgHS3X78AAAGoUlEQVRYw9VYaUxUZxR9MKihtSatARdAHdya%2bkON2PSHbdKmqdbGmDaNwSWhS1qNTWmbNi4UFUUQtQpYFxYRyjL7jIDosJVtgNlRZlhkH0GZmTfMzuzL633z1CrOIC1o2uT78ebNN%2b%2bdc%2b85995vEOqY43%2b9kOfuoGjssF4GGngLsWaWAEPvZhq8NK3zhUG34wuer3NRDF6Kzk3Vuh7ymT4Bus517nb/CV5bidoK1zOcCuJpAFfvKdG7SpQ6jkDC6u6jaixAhjo1Joh/zaA2Qjmwfq3lH6zkHark0fXuRzdt00dP0zhoqIMyZqco9WyprPZqUc/OvX0xW%2bo/2V2Ver6sqpbZM0hTmXyiclAD5x95Fj2ohWn0Mg0eWAD6Sq8ys0ORIVektLYT9xk%2bJtON/X0dU95dTWHKvvlRs2qTG4nASAsUyedbFq6VIAv4i9Y3bt1VmZZeVlvP7FXQ7hsCcUAmoAdw%2bSOG39p6UwUdaaKuIpWl1IrRdc7cobHEOmG6bPCspOdyzygd8jtFhfgvDNa6rGvK9R86QldgSLiXFOFGwjzvfdqlVtbEfitBIkQhZDGyWBy0lB%2b5sS5uP0ckxUXl74HIk%2bgh3rlDmoSa1kz5UHa/OmcQzVNogQZAPy3ugjwc57XlDKBJjVK4ydB7Js9DIN/TUFuhBRMmncGQuW7SMlcw2RWy3I3Md%2bbTuk368uyrwnlrRKRo0ZyVotkrIRst6z5gye/ilnguAVAIgMu7pyu1YGyzN0M%2blPinEHCXoDa2GYM9xxokICG4TmqQwDb6pFoK9BUQKLJgDdmFruCl7qBl7mCyG1noWP2uxWQeLGZySq83fvaVBFlMEBAjUQ3b9jD6hylTImDwHG9qK7hvBMEdrRedEnRAFAEuDhS1QRU62SoDLbGMGHHh1wx4JnWurF7lfloFDT6izzgetRWbscrrt%2byhKzzIEgi/B3nDci5r3OlQLdpw8%2bSZCgoNR%2b9LAgip7ut4%2bqiWonVNicCFjntggONN0ky5gjOOAYE/Rs15w3rYAN3glLATJFSoHD9aLwaUgZRTbsdyBtS7swrBPyyTd6L/oI4ZvKUtkvHX13iRKDcS6Qpfa9Dp7FfyNQiJt/b9stqaxs27ALowdLUEWVSdkEzTmKljzucQeFz4E2sFFzpx9OBgCD%2bU0diL%2bRBIlglLE3Ve6VOm8GXgY4ZhogcIF0HVOsDlxXOqPs/IOcBtgp8XqcZxPzzeDAT0HkbXgD5qo4/AfPv3iXoMc6TnjGz7om7r7goqjZt5WRSyHF%2bkZdxzF6la66OWN2kGQBKALLnlDngU3Mwy4g0YQp7ePgA/BoekCTsv3X0AZcqvxAnxQOxBfr9U1O%2b4kHekTgS%2bL1ZZJhCAzkUbGlVu2IwhC1yvvmmWygxGo1WlvtvZWcpmVTCY5ZXcpk3b8STMe6uigELVOfFuMHkZhdeDuJOb71wb1oENEqpbLnaPMI0YUfjBxxDdVIEcpE8Ymh6oyBASGlTvyS4KJCFosdC/BrfFYUiofcc%2bA4bZ9h3CwtaPRm9qjnybv/SdmwWFlWcyxEiEIGxdObeKoncHKspPSQhQHuQ2pfLlOGK17WRL%2b4nm23n3tPCRbcL9cKRe5IsxeqxBnD2g9jtc4HnQOrP7VfHsKv8m9jXXYp29Ky4emoBR1mVCNa7XVmNImDo4SkAiS5Gwuti9nDZhc8xWQfg6jjBgE/ibgE8/nuwBNKG69XBlM2QAyBQ8MGX1qUAPkBYw99WhMehilDEHkDzI5UGnA1FNUkYDudxXSe1QScU/H8FCyfb0XNvO71zIYiwkWjVrBX/OKnEwGQJf81MiEGiJ%2bYjV3hGohk7MALzy964R3KB6d7Haeri6la5zMI0eaGrn7wwkNUqgS0D9OSvtSW8fLCKU/a86sU9FTo5UJv0hwfzKEryjBS3xBpFVpGj%2b7JXgXQmyUEKKaNgeV37jFkOBUrWuKRHw1UoPUV7AwdDCADGI%2bIYDA0%2bnCORwE5wAgSf8Pc15jmLwFGutZbzWji/jrXNBQuGqELIQiRTPIjduib3BYDOGVb6x1OW3/gQc5ghV4KIyeE6LuyHkKa0yqK2gK5pvvn24Z/qjNWqHmRQ/Ayh1t9hlio93js6ObozZwr2Uy%2bwdwisPEfh/Ok4/VVgNnqsK7eXe0YeanvGjGQy/cNJQ40aH%2bZlbTOMI22ioBbhBw6aitukeaEp8EwTTJ6oXeLDU2IAGOJuqsT4B3T4zR8qXt/AAOaeI%2bz9J4AX9K/EfX38BRuBFnggR7wQAAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"922\" alt=\"background\" data-srcset=\"/assets/static/header.82a2fbd.997ade5f6837b50173c060b1dcdf8612.png 480w, /assets/static/header.0ac4834.997ade5f6837b50173c060b1dcdf8612.png 922w\" data-sizes=\"(max-width: 922px) 100vw, 922px\" data-src=\"/assets/static/header.0ac4834.997ade5f6837b50173c060b1dcdf8612.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/header.0ac4834.997ade5f6837b50173c060b1dcdf8612.png\" width=\"922\" alt=\"background\"></noscript></p>\n<blockquote>\n<p>Maj : Nouvelle version disponible => <a href=\"https://github.com/maximegris/angular-electron\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Angular 8.2 / Electron 7.1</a></p>\n</blockquote>\n<h1 id=\"introduction\"><a href=\"#introduction\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Introduction</h1>\n<p>Dans un passé pas si lointain que ça, j'ai eu à travailler sur des projets intégrant la technologie <strong>AngularJS</strong> et <strong>Electron</strong>. Si vous n'avez jamais entendu parlé d'<strong>Electron</strong>, je vous invite à lire le <a href=\"https://electron.atom.io/docs/tutorial/quick-start/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">guide de démarrage</a> sur le site officiel. Pour faire simple, c'est un framework qui vous permet de servir du contenu web dans une application de bureau et vous donne la capacité d'interagir avec les fonctionnalités de l'OS avec NodeJS.</p>\n<p>J'aurais pu continuer avec cette stack de développement qui tourne bien, mais que ceux qui veulent maintenir des applications AngularJS à l'heure des <strong>Angular</strong>, <strong>React</strong> ou <strong>VueJS</strong> lèvent la main ? Vous devez pas être beaucoup... Aujourd'hui, il n'existe pas de manière simple de démarrer un projet avec la dernière version d'<strong>Angular</strong> et d'<strong>Electron</strong>, avec une stack \"moderne\" en <strong>TypeScript</strong>, <strong>Sass</strong> et surtout du <strong>Hot Reload</strong> (ouiiiiiiiii, chose que je n'avais pas sur mes précédents projets avec <strong>AngularJS</strong>). </p>\n<h2 id=\"contexte-du-projet\"><a href=\"#contexte-du-projet\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Contexte du projet</h2>\n<p>Lorsque j'ai crée le projet <a href=\"https://github.com/maximegris/angular-electron\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">angular-electron</a>, mon objectif était de disposer d'un kit de démarrage simple pour commencer une application de bureau avec <strong>Electron</strong> et <strong>Angular</strong> (4+) avec la puissance de <strong>TypeScript</strong> et du <strong>Hot Reload</strong>.</p>\n<p>Avec ce projet, il est possible :</p>\n<ul>\n<li>Exécuter l'application en mode \"développement\" avec du Hot Reload</li>\n<li>Exécuter l'application en mode \"production\"</li>\n<li>Packager l'application dans un exécutable pour Linux, Mac ou Windows</li>\n</ul>\n<h2 id=\"pourquoi-angular-avec-electron-\"><a href=\"#pourquoi-angular-avec-electron-\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Pourquoi Angular avec Electron ?</h2>\n<p>Il ne faut pas être sectaire, rien ne vous oblige à utiliser <strong>Angular</strong> avec <strong>Electron</strong>! Le fait qu'une application <strong>Electron</strong> ne nécessite qu'un seul fichier en point d'entrée fait du framework <strong>Angular</strong> un très bon candidat, au même titre que d'autres comme <strong>React</strong> ou <strong>VueJS</strong>. En effet, avec <strong>Angular</strong>, tout commence dans le fichier <em>index.html</em> du projet comme souhaité. :) Je suis parti sur ce framework car je le maîtrise bien tout simplement.<br>\nSi ce projet vous inspire pour faire de même avec d'autres frameworks du marché, je serai ravis d'avoir votre retour d'expérience et d'échanger sur les points positifs et négatifs que vous avez rencontrés.</p>\n<h2 id=\"on-y-va-\"><a href=\"#on-y-va-\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>On y va !</h2>\n<p>Pour commencer, il vous faut récupérer le projet <a href=\"https://github.com/maximegris/angular-electron\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">angular-electron</a></p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #FFFFFF\">git clone https://github.com/maximegris/angular-electron.git</span></code></pre>\n<p>Et installer les dépendances :</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #FFFFFF\">npm install</span></code></pre>\n<p>Si vous souhaitez générer les composants Angular avec le client <strong>Angular</strong>, il vous faudra installer le client <code>@angular/cli</code> dans le context global de NPM.</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #FFFFFF\">npm install -g @angular/cli</span></code></pre>\n<h2 id=\"comment-est-structuré-le-projet-\"><a href=\"#comment-est-structur%C3%A9-le-projet-\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Comment est structuré le projet ?</h2>\n<p>Si vous êtes familier avec <strong>Electron</strong>, vous savez que toute la magie se passe dans le fichier <strong>main.js</strong> à la racine de votre projet. Ici, comme nous sommes en <strong>Typescript</strong>, il s'agira du fichier <strong>main.ts</strong>. C'est dans ce script que notre processus principal sera exécuté.<br>\nPlus exactement à la ligne :</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #FFFFFF\">  </span><span style=\"color: #A6ACCD\">win</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">loadURL</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">file://</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">+</span><span style=\"color: #FFFFFF\"> __dirname </span><span style=\"color: #C792EA\">+</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">/index.html</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #FFFFFF\">)</span><span style=\"color: #89DDFF\">;</span></code></pre>\n<p>La fonction <strong>loadUrl</strong> prend le point d'entrée de votre application et l'exécute dans le processus d'affichage <strong>mainWindow</strong> d'Electron.</p>\n<p>Dans la vrai vie, le nombre de fichiers dans un projet augmente et il est important de garder son répertoire de travail logique et optimisé durant toute la vie du projet. C'est pour cela que la structure du projet est la suivante :</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #A6ACCD\">mon</span><span style=\"color: #C792EA\">-</span><span style=\"color: #A6ACCD\">appli</span><span style=\"color: #C792EA\">/</span>\n<span style=\"color: #FFFFFF\">├── </span><span style=\"color: #A6ACCD\">app</span><span style=\"color: #C792EA\">-</span><span style=\"color: #A6ACCD\">builds</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">--&gt;</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">Le</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">code</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">packagé</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">pour</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">Linux</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">Windows</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">ou</span><span style=\"color: #FFFFFF\"> MAC</span>\n<span style=\"color: #FFFFFF\">├── </span><span style=\"color: #A6ACCD\">dist</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">--&gt;</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">Le</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">code</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">source</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">Typescript</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">transpilé</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">en</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">Javascript</span>\n<span style=\"color: #FFFFFF\">├── </span><span style=\"color: #A6ACCD\">e2e</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">--&gt;</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">Les</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">tests</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">de</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">bout</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">en</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">bout</span>\n<span style=\"color: #FFFFFF\">├── </span><span style=\"color: #A6ACCD\">src</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">--&gt;</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">Le</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">code</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">source</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">Typescript</span>\n<span style=\"color: #FFFFFF\">    └── </span><span style=\"color: #A6ACCD\">index</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #A6ACCD\">html</span>\n<span style=\"color: #FFFFFF\">├── </span><span style=\"color: #A6ACCD\">package</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #A6ACCD\">json</span>\n<span style=\"color: #FFFFFF\">├── </span><span style=\"color: #A6ACCD\">main</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #A6ACCD\">ts</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">--&gt;</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">Fichier</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">principal</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">pour</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">Electron</span><span style=\"color: #FFFFFF\"> </span></code></pre>\n<h2 id=\"cest-joli-mais-comment-tu-lutilises-\"><a href=\"#cest-joli-mais-comment-tu-lutilises-\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>C'est joli mais comment tu l'utilises ?</h2>\n<p>Comme précisé dans la première partie de l'article, il existe 3 modes d'utilisation :</p>\n<ul>\n<li>Mode développement : Le code source est exécuté en mode à la volé avec <strong>Webpack</strong> ce qui vous permet de visualiser directement tout changement sans relancer. Pour moi c'est une killer-feature indispensable aujourd'hui pour le développement web.</li>\n<li>Mode production : Le code source s'exécute dans une fenêtre <strong>Electron</strong> avec les variables de productions.</li>\n<li>Mode packagé : Le code source est packagé dans un exécutable pour les différents OS (Linux, MAC ou Windows)</li>\n</ul>\n<p>Les détails du lancement sont disponible sur le GitHub du projet <a href=\"https://github.com/maximegris/angular-electron\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">angular-electron</a></p>\n<h2 id=\"vers-linfini-et-au-delà\"><a href=\"#vers-linfini-et-au-del%C3%A0\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Vers l'infini et au delà</h2>\n<p>Dans une application web classique avec <strong>Angular</strong> ou autre framework, vous pouvez interagir avec le navigateur de l'utilisateur. Cela peut être suffisant. Mais codant avec <strong>Electron</strong>, vous pouvez communiquer directement avec les fonctionnalités du PC de l'utilisateur à travers les modules NodeJS. Vous pouvez facilement créer des fichiers sur le PC, accéder à son contenu, etc... Ce qui ouvre de nouvelles perspectives et d'opportunités à explorer!</p>\n<p>Le code source et plus de détails sont disponible sur le GitHub du projet  <a href=\"https://github.com/maximegris/angular-electron\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">angular-electron</a>. </p>\n","tags":[{"title":"Angular","path":"/tag/Angular/"},{"title":"Electron","path":"/tag/Electron/"},{"title":"Typescript","path":"/tag/Typescript/"},{"title":"Coding","path":"/tag/Coding/"}]}},"context":{}}