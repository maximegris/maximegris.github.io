{"hash":"9c41b98dc5ebbaf6242761f5464b39dbbcc23430","data":{"post":{"title":"Qu'est ce que l'architecture Serverless ?","date":"10 août 2019","timeToRead":5,"content":"<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1300 704' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-22fbd4c8ee08f3d954744305bc7143b7'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-22fbd4c8ee08f3d954744305bc7143b7)' width='1300' height='704' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAjCAYAAAAkCQwqAAAACXBIWXMAAAsSAAALEgHS3X78AAAJcUlEQVRo3u1a%2bVtT1xb1L3rAA2RQIMqgDFppxTpgqbZiLQ5gS62iUAtURSRBXmcBEao4BVBEcEShOCAyJGFKAAMEECtDkps7n/XODVBT7fd%2bedAXv9cf1nfuvZnOXmfvtfc5O4uGe0z4f8aivwlY4B8Y6jaRuVHBIIX5NQzOvjbzXiMZcvncW0uAq%2bGzRsNC75/3GvHSaMSkqReTxl4yaTLiN3o/Sp8rhpt/J%2bIVaW8VAS4r6bxWDB/rNWGCGjvYbZQfdwwI2uZB7vQDi1jYZEHpw2H%2beouZ1%2bv7pLEeo0zf5yRqcNYbhhfYGxYtgPFQJj44O%2bmX1KB2Xb%2bgaRzlN9RZxaVXWOJTycNDy5N/aHnJs4Ini6s4hFY75KRbk2L5oyGeflZSvIKOcCXTrQlwNV5x4zHq0vS59K/GET6impE9LnMILBuX3inqZbcWdTiSyvSO3WU69pMzekf8KZ1jRYmZ9zk3KXtVCoivnRJrW8wCJc9FDxaGhPkk4HfjlTjvNPSJ2%2bomeI8KHiFlo2JiURuTWWlg8h6M8JqOKelk%2b4Rc0DGJk%2b2Tkpoi9%2b4Am3a%2b3b7%2blIH1vWAl/lUcyW8Y5el3ycMLSMKi%2bRM8p8s6jdcb%2bsV11ZO8N3X1988Y2Wxtuz2/Y1LK65OQ2yvieDePHCc4oozKfa5JgsYoQPNwREgteWILK7UIHpUisurH2HFKwkJlhnkNAcuMiksf1k7w3lUCgrQ2svHquKjupUb2CDims5EcBXo7hW0W9hnQ587Xe3hoOm3k6/NPmajTA6InDYnvaBgp4WCe9bL5JGLRfKm%2bIljKJI/dH%2bM9tRzWlvVzkVXT8mKtA%2btv2siJLpacHATyB0HyzRQz13Mgs0DBEIhGeUa95XB5i3152Yi05Aor3219JryYEUb3CwFlUuN0ck3tA0LwVVYOPTMsHLuiYzJ0PCKuOUhAJUfeqxrD1uwisuXwj9iSVYgtmade4eufkZDxAxK%2b%2bpms26dBQnYxyW6bQkGPQ04parZ7X7Qj8caEMNLzSg/mywvmxQPmVj%2bjflzwvOTA7uKnjMZglfMHCJIutpKlp59haQ3gn14FH69l8PEIgY93qPN6iX8UQoJjsSImHhEr3sWh/Vlk4wfJ2HreQI4PAOr7z/jYwh7Ot4ondTQzzKZHZ3ZwGwKUKq7b0CdF1TDycmX1r/c4co0i1AMguwouIiByKwkuG4TqFhCUcxsBQavg578Svv6RUKliERHzIeJT0hG/7WPcq2/Coax8sq6kjex9wJC8ToaklrbaPS/YycG7LwRXLXALApTVUFalpmWQ963ksKnIwGhaX4o5XSzUfYSknG0gwWEbsCzxGFQVVoTcpCQcvYnQ6AREx%2b1AWNwuRKzdibA19Dp2J73%2bFJGbv0DilQEk1U%2bRfc0MsmtNrKp4SIirtcsDXSbRMo8Z4b8mQMn7Sl3/3a8jvOdljuwubWfyqYrndDqQZ5LI/ho9Cd%2bRi/DEowhL%2bQGqsxYE1QJRZX34KO1bRO3MRcweNaJ3n0DMXg0iErOxZt/3SLo5RpIbpkjKQwYZ1/v4d0r6%2bJBqTnrc0S%2bOz6MYzgsBU5SAzHvjgke5VfryosGh6WJwTM9Ao4TAj9UI8AlD4JJoBPouR0BsEoJ/sSCYkhCYVQNV0GosD12L6FUfYtWy97D/y0zEb9mLbZe7kPrQTlIf2ZBxe0heX9LDeVdwEs0Gc2WyexDwjE5k2tRD0u/9Bs%2byCSntciev6eWg5HYnAT9Vw883HH4BkfALjIafVzACVm9HUOkgguqAkJw7CF/zEbZsO4DElfFofNCMjOwCKoI67H/iIPseW3G48TnZXGxgvbQsufXUTJT9hdkNPUD0KLfNeQDJMTBQ91MNKL2LkMgEqFZvw7LVH2PZmu1QrdhIQyIbK69MI/iGQsJthEZ9gLD3diCSakDM5s%2bRXGfGgWY7SWuhGnDfIm90Vw%2bY04BvFQ3QUg0o67C7asCB6wYS%2belxRO1WI4ZiFY33mJSTiNtznOb/Ymc4KJqwsqQXcV8UIGp7JuIO/oR9jS/IwSc2kt7B4citAWHNaTfVAJcsIPhWcNhY1OmYywKzIUACFkcggGpAQGDUKyxZBX%2bfUKje/wyqc6MIpuGw5Js6JO9Jw6aEZCTXmHC4nSVZeg5f1xg5VfGguLbOLrldFnizDrCItA5gnXUATYO7fr4Gf7%2bVxBn/f0AUFgfGQLU0Gss3pDpJWHxVxjftMtKzC8juKgOyDCLdH9jxWWkr4%2bWudYBrJZheP857XnRg1%2blWRqOflvNoJben6AZZEvwuQsLXEwqoKObG5eHvI4zWA%2bFhcQhPSEPI2REoXrQsvwlpd56Ro33A8XozH1vUSytBjtS2mHm3qwT/bC8QdmZIOFKlZ9TPgCMtL0niBT3ZcKYDm37RkfizOsSf1WNXRSc0d4346KIBn1R2Y%2bflNnx6w0IiqhkE0r3DutsOnGifllNKntq8L9joXmBSGHXXvYCrF%2bTcG%2bOVffz6UwZGfaePU5tB9/0CSf7VRvY32ZD1hCEZzQwpoalSPykhj8Z4noEjBT0i8jpZkvrQRkKv2OBfxWPtpREh4tyoGFjl3rtB8uZ5wKTgVcEj4ac2Nu%2b2iVX3S8jt5lBosJHTeisp1NvI/WGGvLAypKLfQc4ZGaLtZ8j3tO4/0i0i/YmVrLj0UgqqcuCfWtaZYdz2PODNEyET9Pp%2bIa5mmldIiCvscmRpO%2bwndVPy0V4RKY8Z7Giw4vOmaRx%2bYkXqIyv2t7I4RNPdN50cTjSNCPvKntoizo%2bLivGZ9c/Z56%2bdCA31uBkBihfMkWCe1QPD3JkgDQdV6aiUWNjGZF/tZNRNFj6zYVQ62Gwlh1oZkv10Ws5pHJGO3DHzB8rbmfVFXazv%2bWniV8kSTcMo98czQZN7ngn%2b2ZG40gug91JB4wgfVu2QPLQcAkufi7HKqXBpF7u9uI1NKm5lt5fouPiSbi6yqJ/zLZ%2bSvSp5bKydFq879/69ZCGNX6i%2bwO/hYJnpC5A2Xb%2bobhjlN9RapaBqjnhc5mSv8zZ4lVuJB83v3pW8HHGNJTtuTojlj4Z58xt9AZP79wX%2bc2fI6OwMDXUbpQdtA2Jl8xBf8mhELHo4Sn55ZFE6Q0KHrk9U3P3l29wZel0TXENiRsFNUPRBaX8phCjeMTMaMRsyb39v8A/eMEPEnzVKnYS44FWH%2bC8y/H/y/4DXV9a1Je5aU/z9B4m/EP8GucfQsHF41lUAAAAASUVORK5CYII=' /%3e%3c/svg%3e\" width=\"1300\" alt=\"background\" data-srcset=\"/assets/static/header.82a2fbd.ce9de10c07e36337c6029a60f18fa7a6.png 480w, /assets/static/header.b885986.ce9de10c07e36337c6029a60f18fa7a6.png 1300w\" data-sizes=\"(max-width: 1300px) 100vw, 1300px\" data-src=\"/assets/static/header.b885986.ce9de10c07e36337c6029a60f18fa7a6.png\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/header.b885986.ce9de10c07e36337c6029a60f18fa7a6.png\" width=\"1300\" alt=\"background\"></noscript></p>\n<h1 id=\"introduction\"><a href=\"#introduction\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Introduction</h1>\n<p>Il y a quelques années, le monde de l'informatique a découvert la conteneurisation (Docker, Kubernetes,Chef ...) et de manière générale le mouvement DevOps, visant à aligner le système d'information sur les besoins de l'entreprise. S'accompagne à ces changements l'émergence de nouveaux types d'architectures. C'est ainsi que les architectures <strong>Microservices</strong> sont nées, et que les architectures dites <strong>Serverless</strong> sont en train de pointer le bout de leur nez.</p>\n<p>Buzzword de l'année 2017, nous allons voir ensemble qu'est ce qui ce cache derrière ce terme, qui sont les grands acteurs actuels et quels sont les avantages et inconvénients de ce type d'architecture.</p>\n<h2 id=\"serverless-kesako-\"><a href=\"#serverless-kesako-\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Serverless, kesako ?</h2>\n<p>Les architectures <strong>Serverless</strong>, traduisons <strong>sans serveur</strong>, correspondent à des applications qui dépendent grandement de services tiers (<code>Baskend as a Service</code>) ou sur des conteneurs <strong>sans état</strong> pouvant être mis à l'échelle de manière transparente (<code>Function as a Service</code>).</p>\n<p>L'objectif premier de ce paradigme d'architecture est de réduire au maximum la compléxité (humaine et matériel) pour ainsi ne payer que ce qui est réellement consommé en puissance de calcul, stockage et bande passante. Ce nouveau mode de facturation a un petit nom : le <code>pay as you go</code>.</p>\n<p>Le mot <strong>Serverless</strong> peut porter à confusion, car derrière tout cela, il y a tout de même des serveurs et du matériel pour faire fonctionner nos belles applications! Il faut comprendre en fait qu'une entreprise qui met en place une architecture <strong>Serverless</strong> externalise ses processus et son matériel chez un fournisseur pour se focaliser complétement sur les aspects métiers de ses applications.</p>\n<p>On ne peut donc pas qualifier de <strong>Serverless</strong> des infrastructions <code>PaaS</code> comme Heroku car la mise à l'échelle n'est pas transparente sur ce type d'architecture.</p>\n<p><strong>Attention aussi, ce n'est pas la solution à tout les cas d'usage! La première étape dans la construction d'un projet est de bien identifier les cas métier, et de ceux-ci en découlent l'infrastructure à mettre en place. Et non pas l'inverse!</strong></p>\n<h2 id=\"qui-pèse-dans-le-game-\"><a href=\"#qui-p%C3%A8se-dans-le-game-\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Qui pèse dans le game ?</h2>\n<p>A l'heure actuelle, et comme on peut s'en douter, les principaux fournisseurs de ces services <code>BaaS</code> sont les grands acteurs du Cloud, à savoir Amazon Web Services (le précurseur), Google Cloud Platform et Microsoft Azure. Mais d'autres solutions tentent d'émerger dans cette écosystème (comme <a href=\"https://open.iron.io/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Iron.io</a> qui offre une solution <code>FaaS</code> open source et fonctionnant chez n'importe quel fournisseur Cloud).</p>\n<p>Ci-après un tableau comparatif des principaux composants <code>BaaS</code> de nos amis les fournisseurs 'ricains.</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Amazon Web Services</th>\n<th>Google Cloud Platform</th>\n<th>Microsoft Azure Services</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Hot Storage</td>\n<td>Amazon S3</td>\n<td>Google Cloud Storage Standard</td>\n<td>Azure Block Storage</td>\n</tr>\n<tr>\n<td>Cold Storage</td>\n<td>Amazon Glacier</td>\n<td>Google Cloud Storage Nearline</td>\n<td>Azure Cool Block Storage</td>\n</tr>\n<tr>\n<td>Compute (FaaS)</td>\n<td>AWS Lambda</td>\n<td>Google Cloud Functions</td>\n<td>Azure Functions</td>\n</tr>\n<tr>\n<td>Database</td>\n<td>Amazon DynamoDB</td>\n<td>Google Cloud Datastore / Google Cloud Bigtable</td>\n<td>Azure DocumentDB</td>\n</tr>\n</tbody>\n</table>\n<p>En encore pleins d'autres...</p>\n<p><img class=\"g-image g-image--lazy g-image--loading\" src=\"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 550 425' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-ffde3b709451b0c78cbcc89c29345198'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-ffde3b709451b0c78cbcc89c29345198)' width='550' height='425' xlink:href='data:image/jpeg%3bbase64%2c/9j/2wBDAAYEBQYFBAYGBQYHBwYIChAKCgkJChQODwwQFxQYGBcUFhYaHSUfGhsjHBYWICwgIyYnKSopGR8tMC0oMCUoKSj/2wBDAQcHBwoIChMKChMoGhYaKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCj/wAARCAAxAEADASIAAhEBAxEB/8QAHAAAAQUBAQEAAAAAAAAAAAAAAAMEBQYHAQgC/8QANBAAAQMDAwIFAgENAAAAAAAAAQIDBAAFEQYSIRMxByJBUWEUMnEWMzREYmNygYKRkqHB/8QAFAEBAAAAAAAAAAAAAAAAAAAAAP/EABQRAQAAAAAAAAAAAAAAAAAAAAD/2gAMAwEAAhEDEQA/APVNFFNrlKEK3yJJAPSbK8E4yQOBQITbj05H0kNr6mbs39PdtShPoVqwcA844JPt3psqJdn2yp%2b5txV5yBGZSQB8lecn54/Cm8eI5BtkWS81JkzlPCQ%2bGANzjikkYVkgbU5x8bRWea2i3D8oIMRi7XlqYpOWmnYwkpf48wynaEpHAJ7nPPAoL2lbAKl27VCFP/cpL7zbzauccp4KRnjykVNWy4GU49HkNdGYxgrQDuSUnO1SVeoOD8ggiqFeNJREJjfQRlIuSY5KkRnEJIWkAqAQoKRkhRA9M7fQ5pPRMRVvbt11lRLjBfXJ%2biUmeT1VNrGAnYFKQkdQA%2bUDIANBqFFAooCmN%2bjmVZprIBKlsqAA7k4yP90%2boNBE29x/6ZU9SlPNOxkOdJJ3KCwnkJHbnjj3zUdeYbqpi5Dk5aZikkxUFILEVKOStQ45PAKicjOE45zW7svV9q1DPaYVHg6SZaMlqcGBJWlROVIW3uCgkc42pP4%2b1c1Z4jP2aO8m%2bWJF/TvMNbcRtbDg3BC0hbKt/lVuQeSFfsd6C7t3SNcZzL0dtlE4tlDy2nWwp9JQQQ0Qck7tpGfQUvLZXE0Q64mY7OShSZMV94lTmCpKk5J5OCSBnnGAckZrP3fEpuzXe1w9f2SJAeuaVzBCjLXLkQ%2bkAppTiEg8qxxtAwU88ZxXm/G27XTT9z1PKssGFo6DNbbZQ66oSpqgseRA%2b3IHKuMenuQHpEUUhAlNzYUeUzu6bzaXE7hg4UARkfzpegK4pQSMqIA%2ba7VM8WdJzNZ6TFpt8tEN4y2Hy6sqGEoWFHGOc47UE7eY4nrgJEhtLDMlD7yCr84kBRSP89iv6aY6jsVvuzIZDENHWcKnpAwl1AIAUpBHO8hKU7vbHsKx3TPgVeLfKiqudyt0tpgwjglxRUGngtY5GPtBSPfcc4qNieAOpWbXIhu3m3Ol6O4yHC45lsqDOCPJ%2b6UO44I78ig1fR/hzYNL6ru12jwY5kSChxmS%2b6t59AKcLBW4SeSO/c5xUlO8PdFzb2brL0/anbh1ApTimR5nO%2bVJ7FXyRms3ungzerjqq33B26wxCZiwmHkBSytXR6QWACkgg9NRGfVXIprqrwW1HeL7dpca725qPLuSpiNxcCwkhzk4T9yeoABnHHcZwA9AIKVJBQQU%2bmO1dqieEOkZuitOyoF1lRnnn5rslPQUooSlWMDKgDn34q89RGfuT/eg%2bqKKKAooooCiiighdSfqv8Z/5UM1%2bkJ/AUUUH//Z' /%3e%3c/svg%3e\" width=\"550\" alt=\"Mother GOD\" data-srcset=\"/assets/static/mother-of-god-meme.41e76af.f60441da285f42efca8eb90e1418029b.jpg 550w\" data-sizes=\"(max-width: 550px) 100vw, 550px\" data-src=\"/assets/static/mother-of-god-meme.41e76af.f60441da285f42efca8eb90e1418029b.jpg\"><noscript><img class=\"g-image g-image--lazy g-image--loaded\" src=\"/assets/static/mother-of-god-meme.41e76af.f60441da285f42efca8eb90e1418029b.jpg\" width=\"550\" alt=\"Mother GOD\"></noscript></p>\n<h2 id=\"des-avantages\"><a href=\"#des-avantages\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Des avantages...</h2>\n<p>Commençons par parler des promesses des architectures <strong>Serverless</strong>.</p>\n<ul>\n<li>Séparation des pouvoirs : Un objectif de ce modèle est d'augmenter la productivité des développeurs. Avec cette approche, théoriquement, le développeur peut entièrement se concentrer sur le besoin spécifique qu'il doit réaliser, le code source étant compartimenté et divisé en fonctions autonomes.</li>\n<li>Time To Production/Market : Le modèle des architectures <strong>Serverless</strong> permet de diminuer radicalement le nombre d'étapes incluant la conception, le test et le déploiement du code, avec pour objectif de passer d'un projet de stade d'idée au stade production en quelques jours.</li>\n<li>Baisse des coûts de mise à l'échelle : La mise à l'échelle horizontale offerte par les <code>FaaS</code> est automatique et transparente. Elle est gérer totalement par le fournisseur et permet une facturation au plus prés de la charge consommée par le client (temps de calcul). Selon les cas d'usages et de l'état de maturité du projet, cela peut résulter dans des économies non négligeables.</li>\n<li>Repensons les process... en les optimisant : Dans le cas des Functions as a Service, la facturation se base sur le temps d'éxécution. Par exemple, si un traitement de 2 secondes n'en prend plus qu'1 après optimisation, alors on observera une réduction de 50% de notre facture. On se doute alors que l'optimisation du code source, qui a peu à peu était abandonné au fil du temps avec les ressources serveurs quasi-illimités, va revenir au centre des débats. Faites chauffer les cerveaux !</li>\n<li>Baisse des coûts opérationnels : L'architecture <strong>Serverless</strong> est by-design simple et externalisée. Les services étant mutualisées avec d'autres, au travers du fournisseurs Cloud qui administre les serveurs, il sera possible de réduire les coûts d'infrastructure et d'opérations/développement. La différence du gain avec une architecture <code>PaaS</code> ou <code>IaaS</code> (Infrastructure as a Service) reste peu significative sur cet aspect là.</li>\n</ul>\n<h2 id=\"mais-quelques-inconvenients\"><a href=\"#mais-quelques-inconvenients\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>...mais quelques inconvenients</h2>\n<ul>\n<li>Contraintes d'éxécution : Certaines limites d'utilisations sont rencontrées, voir imposées en fonction des fournisseurs. Par exemple, la durée d'éxécution des fonctions est limitée (9 minutes pour Google Cloud, 5 minutes pour AWS). On pourrait se dire que cela traduit le caractère jeune de ce type d'architecture, mais ces limitations sont en place depuis un moment (fin 2016!) et n'ont pas été revue à la hausse depuis. Ca risque pas trop de bouger hélas... Cela peut empêcher leur utilisation dans certains cas comme le traitement vidéo par exemple.</li>\n<li>Dépendances fortes auprès des fournisseurs Cloud : Malgré l'apparition de framework comme <a href=\"https://serverless.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Serverless.io</a> pour bousculer l'ordre établi, aucune spécification ou norme n'éxiste encore aujourd'hui pour aboutir à un language commun. Cela oblige le client, après définition de ses cas d'usage, d'identifier et de choisir un unique fournisseur pour l'ensemble des services qu'il souhaite utiliser, afin de profiter des avantages offerts par les architectures <strong>Serverless</strong> cités plus haut.</li>\n<li>Le code non testé peut coûter cher : Comme la facturation se fait au temps de calcul ou au nombre d'invocation des fonctions, dans le cas où une fonction peut être utilisé au travers d'une API par une autre personne/société, il est important de pouvoir s'assurer au travers de tests et procédures qu'aucun usage abusif ne peut être fait.</li>\n</ul>\n<h2 id=\"en-résumé\"><a href=\"#en-r%C3%A9sum%C3%A9\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>En résumé...</h2>\n<p>Les architectures <strong>Serverless</strong> proposent une approche s'appuyant notamment sur des services \"clés en main\" pour fournir une abstration de la partie gestion de l'infrastructure. Elle se veut plus simple et promet une réduction des coûts aussi bien d'infrastructure qu'opérationnels. Toutefois cette technologie est encore jeune et il lui faudra encore un peu de temps pour être mis en place dans les entreprises qui peinent déjà pour un grand nombre à suivre le virage du Cloud et de la containeurisation. </p>\n<p><em>Pour aller plus loin, je vous recommande l'article de <a href=\"https://martinfowler.com/articles/serverless.html\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Mike Roberts</a> qui explique très bien, et en détail cette notion d'architecture Serverless.</em></p>\n<p>Sources ayants inspirées cet article :  </p>\n<ul>\n<li><a href=\"https://www.zdnet.com/article/what-serverless-architecture-actually-means-and-where-servers-enter-the-picture/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">What serverless architecture really means, and where servers enter the picture</a></li>\n<li><a href=\"http://blog.ippon.fr/2017/10/10/how-to-do-serverless/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Comment faire du Serverless</a></li>\n</ul>\n","tags":[{"title":"Serverless","path":"/tag/Serverless/"},{"title":"Architecture","path":"/tag/Architecture/"},{"title":"FaaS","path":"/tag/FaaS/"}]}},"context":{}}